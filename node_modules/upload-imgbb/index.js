const axios = require('axios');
const FormData = require('form-data');
const mime = require('mime-types');

const SUPPORTED_EXTENSIONS = ['jpg', 'jpeg', 'png', 'gif', 'webp'];
const IMG_UPLOAD_API = 'https://imgbb.com/json';
const IMG_HOST = 'https://imgbb.com';

async function uploadLink(link, json = false) {
  try {
    const { headers, data: fileInfo } = await axios.head(link);
    const contentType = headers['content-type'];
    const ext = mime.extension(contentType);

    if (!ext || !SUPPORTED_EXTENSIONS.includes(ext.toLowerCase())) {
      throw new Error('Invalid or unsupported file format');
    }

    const { data: authPage } = await axios.get(IMG_HOST);
    const auth_token = authPage.match(/auth_token="([^"]+)"/)[1];
    const timestamp = Date.now();
    const stream = await axios.get(link, { responseType: 'stream' });
    const form = new FormData();
    form.append('source', stream.data, `${timestamp}-uploaded.${ext}`);
    form.append('type', 'file');
    form.append('action', 'upload');
    form.append('timestamp', timestamp);
    form.append('auth_token', auth_token);

    const { data: uploadResponse } = await axios.post(IMG_UPLOAD_API, form, {
      headers: form.getHeaders(),
    });

    return json ? uploadResponse : uploadResponse.image.url;
  } catch (error) {
    console.error(error)
    throw new Error(`Failed to upload image: ${error}`);
  }
}

module.exports = { uploadLink };